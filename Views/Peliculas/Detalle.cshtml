@using PNT1_TP_Cine.Models; 
@using System.Globalization;

@{
    using var context = new PNT1_TP_Cine.Models.Context();
    List<Funcion> funciones = ViewBag.Funciones;
    Pelicula pelicula = ViewBag.Pelicula;
    var funcionesPorFecha = funciones
        .GroupBy(f => f.FechaHora.Date)
        .OrderBy(g => g.Key)
        .ToList();
}


<section id="detalle" class="container py-5 mt-5 text-white vh-100">
    <div class="d-flex flex-column flex-md-row justify-content-start gap-5">
        <div class="d-flex flex-column justify-content-start">
            <h3 class="text-uppercase fw-bold">@pelicula.Titulo</h3>

       <div class="my-4 w-100 w-md-300px" style="max-width: 100%;">
            <img src="@pelicula.Imagen"
                 class="w-100 rounded-4"
                 style="height: 600px; object-fit: cover;"
                 alt="Imagen de @pelicula.Titulo" />
        </div>



            <p>@pelicula.Sinopsis</p>

            <hr class="my-4" />
            <div class="d-flex justify-content-between">
                <p class="text-uppercase fw-bold">Género</p>
                <p>@pelicula.Genero.Nombre</p>
            </div>

            <hr class="my-4" />
            <div class="d-flex justify-content-between">
                <p class="text-uppercase fw-bold">Duración</p>
                <p>@pelicula.Duracion min</p>
            </div>

            <hr class="my-4" />
            <div class="d-flex justify-content-between">
                <p class="text-uppercase fw-bold">Fecha de Estreno</p>
                <p>@pelicula.FechaEstreno.ToString("dd/MM/yyyy")</p>
            </div>
        </div>

        <div class="d-flex flex-column justify-content-start flex-grow-1">
            <h3 class="text-uppercase fw-bold mb-4">Horarios</h3>

            @if (funcionesPorFecha.Any())
            {
                <div class="d-flex flex-wrap gap-4">
                    @foreach (var grupoFecha in funcionesPorFecha)
                    {
                        <div class="bg-dark rounded-4 p-3" style="min-width: 250px; flex: 1 1 250px;">
                            <h5 class="text-uppercase fw-bold text-white-50">
                                @grupoFecha.Key.ToString("dddd dd/MM", new CultureInfo("es-AR"))
                            </h5>

                            @{
                                var funcionesPorSala = grupoFecha
                                    .GroupBy(f => f.Sala.Numero)
                                    .OrderBy(g => g.Key);
                            }

                            @foreach (var grupoSala in funcionesPorSala)
                            {
                                <div class="mb-2">
                                    <p class="mb-2 text-white"><strong>Sala @grupoSala.Key</strong></p>
                                    <div class="d-flex flex-wrap gap-2">
                                        @foreach (var funcion in grupoSala.OrderBy(f => f.FechaHora))
                                        {
                                            var asientosOcupados = context.Tickets
                                                .Where(t => t.FuncionId == funcion.Id)
                                                .Sum(t => (int?)t.NumeroAsientos) ?? 0;
    
                                            var asientosDisponibles = funcion.Sala.Capacidad - asientosOcupados;
    
                                            @if (asientosDisponibles > 0)
                                            {
                                                <button type="button"
                                                        class="bg-secondary bg-opacity-25 px-3 py-2 rounded-3 text-white text-center fw-bold border-0 btn-horario"
                                                        style="min-width: 60px;"
                                                        data-funcion-id="@funcion.Id"
                                                        data-asientos-disponibles="@asientosDisponibles"
                                                        title="@asientosDisponibles asientos disponibles - @funcion.FechaHora.ToString("HH:mm")">
                                                    @funcion.FechaHora.ToString("HH:mm")
                                                </button>
                                            }
                                            else
                                            {
                                                <button type="button"
                                                        class="bg-danger bg-opacity-50 px-3 py-2 rounded-3 text-white-50 text-center fw-bold border-0"
                                                        style="min-width: 60px; text-decoration: line-through;"
                                                        disabled
                                                        title="Agotado">
                                                    @funcion.FechaHora.ToString("HH:mm")
                                                </button>
                                            }
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>

                <form method="post" asp-controller="Ticket" asp-action="Elegir" class="mt-5">
                    <input type="hidden" name="funcionId" id="funcionId" />

                    <div class="mb-3">
                        <label for="cantidad" class="form-label fw-bold">Cantidad de entradas</label>
                        <input type="number" class="form-control" id="cantidad" name="cantidad" min="1" max="100" value="1" required />
                    </div>

                    @if (User.Identity.IsAuthenticated)
                    {
                        <button type="submit" class="btn btn-primary text-uppercase fw-bold">Continuar</button>
                    }
                    else
                    {
                        <div class="alert alert-warning mt-3">
                            Debés iniciar sesión para continuar con la compra.
                        </div>
                    }
                </form>
            }
            else
            {
                <p class="text-secondary">No hay funciones disponibles para esta película.</p>
            }
        </div>
    </div>
</section>

<style>
    .selected-funcion {
    background-color: #0d6efd !important; 
    color: white !important;
    font-weight: bold;
}


</style>


 <script>
    document.querySelector("form").addEventListener("submit", function (e) {
        const funcionId = document.getElementById("funcionId").value;
        if (!funcionId) {
            e.preventDefault();
            alert("Por favor, seleccioná un horario antes de continuar.");
            return;
        }

        const selectedButton = document.querySelector(`.btn-horario[data-funcion-id='${funcionId}']`);
        const asientosDisponibles = parseInt(selectedButton.getAttribute('data-asientos-disponibles'), 10);
        const cantidadSeleccionada = parseInt(document.getElementById('cantidad').value, 10);

        if (cantidadSeleccionada > asientosDisponibles) {
            e.preventDefault();
            alert(`No hay suficientes asientos disponibles. Quedan ${asientosDisponibles}.`);
        }
    });

        const buttons = document.querySelectorAll("button[data-funcion-id]");
        buttons.forEach(btn => {
        btn.addEventListener("click", function () {
            buttons.forEach(b => b.classList.remove("selected-funcion"));

            this.classList.add("selected-funcion");

            document.getElementById("funcionId").value = this.dataset.funcionId;
        });
    });
</script>

